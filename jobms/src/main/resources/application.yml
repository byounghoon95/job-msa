spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/job
    username: hoon
    password: hoon
  application:
    name: job-service

  # config 를 통해 config server 의 application.name 을 가져올 수 있음
  # optional 을 사용하면 config 서버가 죽었을 때 현재 yml의 설정을 가져와 에러를 피할 수 있음
  config:
    import: optional:configserver:http://localhost:8080
  profiles:
    active: prod

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    database: postgresql

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# Eureka
# 아래 설정은 없어도 유레카에 자동으로 등록된다
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true

# zipkin
management:
  tracing:
    sampling:
      probability: 1.0
  # actuator
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

  health:
    circuitbreakers:
      enabled: true

resilience4j:
  instances:
    companyBreaker: # 서킷브레이커 이름
      baseConfig: default

  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true # health 지표에 서킷브레이커 추가
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        register-health-indicator: true
        automatic-transition-from-open-to-half-open-enabled: true
        sliding-window-type: count_based
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 2s
  ratelimiter:
    configs:
      default:
        timeout-duration: 0
        limit-refresh-period: 4
        limit-for-period: 2


server:
  port: 9091
#  port: 8082